
/*
 * Copyright (C) Yichun Zhang (agentzh)
 */


#ifndef DDEBUG
#define DDEBUG 0
#endif
#include "ddebug.h"


[% IF stream_subsys %]
#include "ngx_[% subsys %]_lua_phase.h"
#include "ngx_[% subsys %]_lua_util.h"
#include "ngx_[% subsys %]_lua_ctx.h"

[% ELSIF http_subsys %]
#include "ngx_[% subsys %]_lua_common.h"
[% END %]


[% IF stream_subsys %]
static int
ngx_[% subsys %]_lua_ngx_get_phase(lua_State *L)
{
    [% req_type %]                  *r;
    ngx_[% subsys %]_lua_ctx_t      *ctx;

    r = ngx_[% subsys %]_lua_get_req(L);

    /* If we have no request object, assume we are called from the "init"
     * phase. */

    if (r == NULL) {
        lua_pushliteral(L, "init");
        return 1;
    }

    ctx = ngx_[% req_subsys %]_get_module_ctx(r, ngx_[% subsys %]_lua_module);
    if (ctx == NULL) {
        return luaL_error(L, "no request ctx found");
    }

    switch (ctx->context) {
    case NGX_[% SUBSYS %]_LUA_CONTEXT_INIT_WORKER:
        lua_pushliteral(L, "init_worker");
        break;

    case NGX_[% SUBSYS %]_LUA_CONTEXT_SSL_CERT:
        lua_pushliteral(L, "ssl_cert");
        break;

    case NGX_STREAM_LUA_CONTEXT_PREREAD:
        lua_pushliteral(L, "preread");
        break;

    case NGX_[% SUBSYS %]_LUA_CONTEXT_CONTENT:
        lua_pushliteral(L, "content");
        break;

    case NGX_[% SUBSYS %]_LUA_CONTEXT_LOG:
        lua_pushliteral(L, "log");
        break;

    case NGX_[% SUBSYS %]_LUA_CONTEXT_TIMER:
        lua_pushliteral(L, "timer");
        break;

    case NGX_[% SUBSYS %]_LUA_CONTEXT_BALANCER:
        lua_pushliteral(L, "balancer");
        break;

    default:
        return luaL_error(L, "unknown phase: %#x", (int) ctx->context);
    }

    return 1;
}


void
ngx_[% subsys %]_lua_inject_phase_api(lua_State *L)
{
    lua_pushcfunction(L, ngx_[% subsys %]_lua_ngx_get_phase);
    lua_setfield(L, -2, "get_phase");
}
[% END %]


[% IF http_subsys %]
int
ngx_[% subsys %]_lua_ffi_get_phase([% req_type %] *r, char **err)
{
    ngx_[% subsys %]_lua_ctx_t  *ctx;

    ctx = ngx_[% req_subsys %]_get_module_ctx(r, ngx_[% subsys %]_lua_module);
    if (ctx == NULL) {
        *err = "no request context";
        return NGX_ERROR;
    }

    return ctx->context;
}
[% END # http %]


/* vi:set ft=c ts=4 sw=4 et fdm=marker: */
