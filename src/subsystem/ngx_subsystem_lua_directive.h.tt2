
/*
 * Copyright (C) Xiaozhe Wang (chaoslawful)
 * Copyright (C) Yichun Zhang (agentzh)
 */


#ifndef _NGX_[% SUBSYS %]_LUA_DIRECTIVE_H_INCLUDED_
#define _NGX_[% SUBSYS %]_LUA_DIRECTIVE_H_INCLUDED_


#include "ngx_[% subsystem %]_lua_common.h"


char *ngx_[% subsystem %]_lua_shared_dict(ngx_conf_t *cf, ngx_command_t *cmd, void *conf);
char *ngx_[% subsystem %]_lua_package_cpath(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
char *ngx_[% subsystem %]_lua_package_path(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
char *ngx_[% subsystem %]_lua_content_by_lua_block(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
char *ngx_[% subsystem %]_lua_content_by_lua(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
char *ngx_[% subsystem %]_lua_log_by_lua_block(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
char *ngx_[% subsystem %]_lua_log_by_lua(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);

[% IF http_subsys %]
char *ngx_[% subsystem %]_lua_rewrite_by_lua_block(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
char *ngx_[% subsystem %]_lua_rewrite_by_lua(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
char *ngx_[% subsystem %]_lua_access_by_lua_block(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
char *ngx_[% subsystem %]_lua_access_by_lua(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
char *ngx_[% subsystem %]_lua_header_filter_by_lua_block(ngx_conf_t *cf,
    ngx_command_t *cmd, void *conf);
char *ngx_[% subsystem %]_lua_header_filter_by_lua(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
char *ngx_[% subsystem %]_lua_body_filter_by_lua_block(ngx_conf_t *cf,
    ngx_command_t *cmd, void *conf);
char *ngx_[% subsystem %]_lua_body_filter_by_lua(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
[% END %]

char *ngx_[% subsystem %]_lua_init_by_lua_block(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
char *ngx_[% subsystem %]_lua_init_by_lua(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
char *ngx_[% subsystem %]_lua_init_worker_by_lua_block(ngx_conf_t *cf,
    ngx_command_t *cmd, void *conf);
char *ngx_[% subsystem %]_lua_init_worker_by_lua(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
char *ngx_[% subsystem %]_lua_code_cache(ngx_conf_t *cf, ngx_command_t *cmd, void *conf);

[% IF http_subsys %]
#if defined(NDK) && NDK

char *ngx_[% subsystem %]_lua_set_by_lua_block(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
char *ngx_[% subsystem %]_lua_set_by_lua(ngx_conf_t *cf, ngx_command_t *cmd, void *conf);
char *ngx_[% subsystem %]_lua_set_by_lua_file(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
ngx_int_t ngx_[% subsystem %]_lua_filter_set_by_lua_inline([% req_type %] *r,
    ngx_str_t *val, ngx_http_variable_value_t *v, void *data);
ngx_int_t ngx_[% subsystem %]_lua_filter_set_by_lua_file([% req_type %] *r,
    ngx_str_t *val, ngx_http_variable_value_t *v, void *data);

#endif
[% END %]

[% IF stream_subsys -%]
char *
ngx_stream_lua_preread_by_lua_block(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
char *
ngx_stream_lua_preread_by_lua(ngx_conf_t *cf, ngx_command_t *cmd, void *conf);
char *
ngx_stream_lua_add_variable(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
[% END -%]

char *ngx_[% subsystem %]_lua_conf_lua_block_parse(ngx_conf_t *cf,
    ngx_command_t *cmd);

[% IF http_subsys %]
char *ngx_[% subsystem %]_lua_rewrite_no_postpone(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
char *ngx_[% subsystem %]_lua_capture_error_log(ngx_conf_t *cf, ngx_command_t *cmd,
    void *conf);
[% END %]


#endif /* _NGX_[% SUBSYS %]_LUA_DIRECTIVE_H_INCLUDED_ */

/* vi:set ft=c ts=4 sw=4 et fdm=marker: */
